name: 'Docker Build and Deploy'
description: 'Builds Docker image and optionally pushes to registry'
inputs:
  image-name:
    description: 'Docker image name'
    required: true
  image-tag:
    description: 'Docker image tag'
    required: false
    default: 'latest'
  dockerfile-path:
    description: 'Path to Dockerfile'
    required: false
    default: './Dockerfile'
  context-path:
    description: 'Build context path'
    required: false
    default: '.'
  push-to-registry:
    description: 'Whether to push to Docker registry'
    required: false
    default: 'false'
  registry-url:
    description: 'Docker registry URL (defaults to Docker Hub)'
    required: false
    default: 'docker.io'
  registry-username:
    description: 'Docker registry username'
    required: false
  registry-password:
    description: 'Docker registry password'
    required: false
  build-args:
    description: 'Build arguments for Docker build'
    required: false
    default: ''
outputs:
  image-id:
    description: 'Built Docker image ID'
    value: ${{ steps.build.outputs.imageid }}
  image-digest:
    description: 'Built Docker image digest'
    value: ${{ steps.build.outputs.digest }}
runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Registry
      if: inputs.push-to-registry == 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry-url }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.image-name }}
        tags: |
          type=raw,value=${{ inputs.image-tag }}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context-path }}
        file: ${{ inputs.dockerfile-path }}
        push: ${{ inputs.push-to-registry }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.build-args }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Output image information
      shell: bash
      run: |
        echo "Image built successfully!"
        echo "Image ID: ${{ steps.build.outputs.imageid }}"
        echo "Image Digest: ${{ steps.build.outputs.digest }}"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
