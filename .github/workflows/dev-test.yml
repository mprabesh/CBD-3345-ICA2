name: 'Development Testing'

on:
  workflow_dispatch:
    inputs:
      seed-database:
        description: 'Seed database with test data'
        required: false
        default: true
        type: boolean
      run-coverage:
        description: 'Generate coverage report'
        required: false
        default: true
        type: boolean

jobs:
  dev-test:
    name: 'Development Test with Seeded Data'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js Test Environment
        uses: ./.github/actions/setup-node-test-env
        with:
          node-version: '18'

      - name: Setup MongoDB for Testing
        uses: ./.github/actions/setup-mongodb
        with:
          mongodb-version: '6.0'
          database-name: 'blogservice-devdb'
          seed-database: ${{ github.event.inputs.seed-database }}
          seed-script: 'seed.js'

      - name: Run Development Tests
        uses: ./.github/actions/lint-and-test
        with:
          skip-lint: 'false'
          coverage: ${{ github.event.inputs.run-coverage }}
          test-timeout: '30000'

      - name: Upload Development Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dev-test-results-${{ github.run_number }}
          path: |
            test-results/
            coverage/
          retention-days: 7

      - name: Publish Development Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Development Jest Tests
          path: test-results/test-results.xml
          reporter: jest-junit

      - name: Test Database Connection
        run: |
          echo "Testing database connection..."
          node -e "
            const mongoose = require('mongoose');
            mongoose.connect('mongodb://localhost:27017/blogservice-devdb')
              .then(() => {
                console.log('✅ Database connection successful');
                process.exit(0);
              })
              .catch(err => {
                console.error('❌ Database connection failed:', err);
                process.exit(1);
              });
          "
