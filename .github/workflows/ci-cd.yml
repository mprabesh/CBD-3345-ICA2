name: 'Blog Service CI/CD'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  SECRET_KEY: 'test-secret-key'
  PORT: 3003

jobs:
  test:
    name: 'Test Blog Service'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js Test Environment
        uses: ./.github/actions/setup-node-test-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup MongoDB for Testing
        uses: ./.github/actions/setup-mongodb
        with:
          mongodb-version: '6.0'
          database-name: 'blogservice-testdb'
          seed-database: 'false'

      - name: Lint and Test
        uses: ./.github/actions/lint-and-test
        with:
          coverage: 'true'
          test-timeout: '30000'

      - name: Upload test results and coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            test-results/
            coverage/
            junit.xml
          retention-days: 30

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Jest Tests
          path: test-results/test-results.xml
          reporter: jest-junit

  build:
    name: 'Build Docker Image'
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker Image
        uses: ./.github/actions/docker-deploy
        with:
          image-name: 'magarp0723/blog-service'
          image-tag: ${{ github.ref_name }}-${{ github.sha }}
          push-to-registry: 'false'

  deploy-staging:
    name: 'Deploy to Staging'
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Staging
        uses: ./.github/actions/docker-deploy
        with:
          image-name: 'magarp0723/blog-service'
          image-tag: 'staging'
          push-to-registry: 'true'
          registry-username: ${{ secrets.DOCKER_USERNAME }}
          registry-password: ${{ secrets.DOCKER_PASSWORD }}

  deploy-production:
    name: 'Deploy to Production'
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Production
        uses: ./.github/actions/docker-deploy
        with:
          image-name: 'magarp0723/blog-service'
          image-tag: 'latest'
          push-to-registry: 'true'
          registry-username: ${{ secrets.DOCKER_USERNAME }}
          registry-password: ${{ secrets.DOCKER_PASSWORD }}
